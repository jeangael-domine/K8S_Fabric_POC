#apiVersion: v1
#kind: PersistentVolume
#metadata:
#    name: $artifactsName
#spec:
#    capacity:
#       storage: 500Mi
#    accessModes:
#       - ReadWriteMany
#    nfs: 
#      path: /opt/share/channel-artifacts
#      server: 10.112.122.9 #change to your nfs server ip here
#---
#
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#    namespace: $namespace
#    name: $artifactsName
#spec:
#   accessModes:
#     - ReadWriteMany
#   resources:
#      requests:
#        storage: 10Mi
#
#---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
   namespace: $namespace
   name: $name
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
       app: cli
    spec:
      containers:
        - name: $name
          image:  hyperledger/fabric-tools:x86_64-1.0.0
          env:
          - name: CORE_PEER_TLS_ENABLED
            value: "false"
          - name: CORE_VM_ENDPOINT
            value: unix:///host/var/run/docker.sock
          - name: GOPATH
            value: /opt/gopath
          - name: CORE_LOGGING_LEVEL
            value: DEBUG
          - name: CORE_PEER_ID
            value: $name
          - name: CORE_PEER_ADDRESS
            value: $peerAddress
          - name: CORE_PEER_LOCALMSPID
            value: $mspid
          - name: CORE_PEER_MSPCONFIGPATH
            value: /etc/hyperledger/fabric/msp
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          command: [ "/bin/bash", "-c", "--" ]
          args: [ "while true; do sleep 30; done;" ]
          volumeMounts:
            - mountPath: /host/var/run/
              name: run
            - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
              name: chaincode-volume
            - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
              name: crypto-volume
            - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
              name: channel-volume
      volumes:
        #- name: certificate
        #  persistentVolumeClaim:
        #      claimName: $pvName
        #- name: artifacts
        #  persistentVolumeClaim:
        #      claimName: $artifactsName
        - hostPath:
            path: /root/K8S_Fabric_POC/crypto-config
          name: crypto-volume
        - hostPath:
            path: /root/K8S_Fabric_POC/chaincode/chaincode_example02/go
          name: chaincode-volume
        - hostPath:
            path: /root/K8S_Fabric_POC/channel-artifacts
          name: channel-volume
        - name: run
          hostPath:
            path: /var/run 
